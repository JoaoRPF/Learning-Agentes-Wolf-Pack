;;;
;;;  Robot's updating procedure, which defines the rules of its behaviors
;;;
to reactive-wolf-loop

  let rand random 10
  ifelse redHood-in-sight-90?
  [
    if free-floor-ahead?
      [move-ahead]
   ]
  [
    ifelse redHood-in-sight-270?
      [ifelse (rand <= 5)
        [rotate-left]
        [rotate-right]
      ]
      [ifelse redHood-in-sight-360?
        [rotate-backwards]
        ;; NAO ENCONTROU A REDHOOD 
        [ifelse not free-floor-ahead?
          [ifelse (rand <= 5)
            [rotate-left]
            [rotate-right]
          ]
          [
            ifelse (rand <= 5)
            [move-ahead]
            [ifelse (rand <= 7.5)
              [rotate-left]
              [rotate-right]
            ]
          ]
        ]
      ]
  ]
  ifelse redHood-in-sight-360?
     [set color orange]
     [set color blue]
end


;;; ------------------------
;;;   Sensors
;;; ------------------------
;;;


;;;
;;; check free floor ahead
;;;
to-report free-floor-ahead?
    let ahead (patch-ahead 1)
    report ([kind] of ahead = ROOM_FLOOR) and (not any? turtles-on ahead)
end

;;;
;;;check wall-ahead
;;;
to-report wall-ahead?
  let ahead (patch-ahead 1)
  report ([kind]of ahead = WALL)
end

;;;
;;;check wolf ahead
;;;
to-report wolf-ahead?
  let ahead (patch-ahead 1)
  report(any? wolfs-on ahead)
end

;;;
;;;check redHood ahead
;;;
to-report redHood-in-sight-90?
  let goal redHoods in-cone MAX_VISION 90
  report(any? goal)
end

;;;
;;;check redHood in 270 degrees
;;;
to-report redHood-in-sight-270?
  let goal redHoods in-cone MAX_VISION 270
  report(any? goal)
end

;;;
;;;check redHood in 360 degrees
;;;
to-report redHood-in-sight-360?
  let goal redHoods in-cone MAX_VISION 360
  report(any? goal)
end
 

;;;
;;; ------------------------
;;;   Actuators
;;; ------------------------
;;;

;;;
;;;  Move the robot forward
;;;
to move-ahead
  fd 1
end

;;;
;;; Rotate robot right
;;;
to rotate-right
  rt 90
end

;;;
;;; Rotate robot left
;;;
to rotate-left
  lt 90
end

;;;
;;; Rotate robot backwards
;;;
to rotate-backwards
  lt 180
end


;;;
;;;  Turn robot to goal
;;;
